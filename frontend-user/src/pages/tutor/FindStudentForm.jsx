import { useState } from "react";
import "../../assets/styles/FindStudentForm.css"; // Import file CSS ri√™ng
import AddressSelector from "../../components/Location/AddressSelector";
import { Modal } from "antd";
import { createQRPayment } from "../../services/paymentService";
export default function FindStudentForm({ onSubmit }) {
  const [form, setForm] = useState({
    subject: "",
    level: "",
    location: "",
    schedule: "",
    fees: "",
    timestudy: "",
    numberstudent: "",
    sessionsPerWeek: "",
    notes: "",
  });
  const fees = parseFloat(form.fees) || 0;
  const numberStudent = parseInt(form.numberstudent) || 0;
  const sessionsPerWeek = parseInt(form.sessionsPerWeek) || 0;
  const estimatedIncome = fees * numberStudent * sessionsPerWeek * 4;
  const classFee = numberStudent >= 2 ? estimatedIncome * 0.2 : 0;
  const [showConfirm, setShowConfirm] = useState(false);
  const [showQR, setShowQR] = useState(false);
  const [qrUrl, setQrUrl] = useState("");
  const handleChange = (e) => {
    setForm({ ...form, [e.target.name]: e.target.value });
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    onSubmit(form);
  };

  return (
    <form className="form-container" onSubmit={handleSubmit}>
      <h2 className="form-title">T·∫°o Y√™u C·∫ßu M·ªü L·ªõp</h2>
      <h5>L∆∞u √Ω:</h5>
      <h6>ƒê·ªëi v·ªõi 1 h·ªçc sinh s·∫Ω kh√¥ng m·∫•t ph√≠ m·ªü l·ªõp</h6>
      <h6>ƒê·ªëi v·ªõi 2 h·ªçc sinh tr·ªü l√™n ph√≠ m·ªü l·ªõp l√† 20%</h6>
      <label>
        M√¥n h·ªçc:
        <select
          name="subject"
          value={form.subject}
          onChange={handleChange}
          required
        >
          <option value="">-- Ch·ªçn m√¥n h·ªçc --</option>
          <option value="Maths">To√°n</option>
          <option value="Literature">VƒÉn</option>
          <option value="English">Ti·∫øng Anh</option>
          <option value="Physics">V·∫≠t l√Ω</option>
          <option value="Biology">Sinh h·ªçc</option>
          <option value="Chemistry">H√≥a h·ªçc</option>
          <option value="IELTS">IELTS</option>
          <option value="TOEIC">TOEIC</option>
          <option value="Japanese">Ti·∫øng Nh·∫≠t</option>
          <option value="Chinese">Ti·∫øng Trung</option>
          <option value="Korean">Ti·∫øng H√†n</option>
          <option value="Russian">Ti·∫øng Nga</option>
          <option value="French">Ti·∫øng Ph√°p</option>
        </select>
      </label>

      <label>
        L·ªõp:
        <select
          name="level"
          value={form.level}
          onChange={handleChange}
          required
        >
          <option value="">-- Ch·ªçn tr√¨nh ƒë·ªô --</option>
          <option value="class1">L·ªõp 1</option>
          <option value="class2">L·ªõp 2</option>
          <option value="class3">L·ªõp 3</option>
          <option value="class4">L·ªõp 4</option>
          <option value="class5">L·ªõp 5</option>
          <option value="class6">L·ªõp 6</option>
          <option value="class7">L·ªõp 7</option>
          <option value="class8">L·ªõp 8</option>
          <option value="class9">L·ªõp 9</option>
          <option value="class10">L·ªõp 10</option>
          <option value="class11">L·ªõp 11</option>
          <option value="class12">L·ªõp 12</option>
          <option value="ƒê·∫°i h·ªçc">ƒê·∫°i h·ªçc/Cao ƒë·∫≥ng/ƒêi l√†m</option>
        </select>
      </label>

      <label>
        Khu v·ª±c:
        <AddressSelector
          value={form.location}
          onChange={(value) => setForm({ ...form, location: value })}
          required
        />
        <textarea placeholder="M√¥ t·∫£ c·ª• th·ªÉ chi ti·∫øt ƒë·ªãa ch·ªâ"></textarea>
      </label>

      <label>
        Th·ªùi gian h·ªçc trong tu·∫ßn:
        <input
          type="text"
          name="schedule"
          value={form.schedule}
          onChange={handleChange}
          placeholder="V√≠ d·ª•: T·ªëi Th·ª© 2, 18:00 - 20:00 || T·ªëi Th·ª© 3, 19:00 - 21:00"
          required
        />
      </label>
      <label>
        H·ªçc ph√≠/Bu·ªïi
        <input
          type="text"
          name="fees"
          value={form.fees}
          onChange={handleChange}
          placeholder="H·ªçc ph√≠"
          required
        />
        Gi·ªù h·ªçc/Bu·ªïi
        <input
          type="text"
          name="timestudy"
          value={form.timestudy}
          onChange={handleChange}
          placeholder="Th·ªùi l∆∞·ª£ng h·ªçc"
        />
        S·ªë bu·ªïi/tu·∫ßn
        <input
          type="number"
          name="sessionsPerWeek"
          value={form.sessionsPerWeek}
          onChange={handleChange}
          placeholder="S·ªë bu·ªïi/tu·∫ßn"
        />
        S·ªë l∆∞·ª£ng h·ªçc sinh
        <input
          type="number"
          name="numberstudent"
          value={form.numberstudent}
          onChange={handleChange}
          placeholder="S·ªë l∆∞·ª£ng h·ªçc sinh"
        />
      </label>
      <label>
        H√¨nh th·ª©c d·∫°y h·ªçc:
        <select required>
          <option value="Offline">Offline</option>
          <option value="Online">Online</option>
          <option value="Online + Offline">Online + Offline</option>
        </select>
      </label>

      <label>
        Ghi ch√∫ th√™m:
        <textarea name="notes" value={form.notes} onChange={handleChange} />
      </label>
      <div
        style={{
          marginTop: "1rem",
          background: "#f9f9f9",
          padding: "1rem",
          borderRadius: "8px",
        }}
      >
        <p>
          üí∞ <strong>Thu nh·∫≠p d·ª± ki·∫øn:</strong>{" "}
          {estimatedIncome.toLocaleString()} VND/th√°ng
        </p>
        <p>
          üßæ <strong>Ph√≠ t·∫°o l·ªõp:</strong> {classFee.toLocaleString()} VND
        </p>
      </div>
      <Modal
        title={
          <div
            style={{ fontSize: "20px", fontWeight: "bold", color: "#2c3e50" }}
          >
            üéì X√°c nh·∫≠n m·ªü l·ªõp
          </div>
        }
        open={showConfirm}
        onCancel={() => setShowConfirm(false)}
        footer={[
          <button
            key="cancel"
            onClick={() => setShowConfirm(false)}
            style={{
              padding: "8px 16px",
              backgroundColor: "#bdc3c7",
              border: "none",
              borderRadius: "6px",
              color: "#2c3e50",
              fontWeight: "bold",
              cursor: "pointer",
            }}
          >
            ‚ùå H·ªßy
          </button>,
          <button
            key="confirm"
            onClick={async () => {
              setShowConfirm(false);
              try {
                const url = await createQRPayment(classFee); // g·ªçi API backend
                setQrUrl(url);
                setShowQR(true);
              } catch (err) {
                alert("Kh√¥ng t·∫°o ƒë∆∞·ª£c m√£ QR: " + err.message);
              }
            }}
            style={{
              padding: "8px 16px",
              backgroundColor: "#27ae60",
              border: "none",
              borderRadius: "6px",
              color: "white",
              fontWeight: "bold",
              cursor: "pointer",
            }}
          >
            ‚úÖ T·∫°o QR thanh to√°n ({classFee.toLocaleString()} VND)
          </button>,
        ]}
      >
        <div
          style={{
            background: "#ecf0f1",
            padding: "1rem",
            borderRadius: "8px",
            marginBottom: "1rem",
            fontSize: "16px",
            color: "#34495e",
          }}
        >
          <p>
            üí∞ <strong>Thu nh·∫≠p d·ª± ki·∫øn:</strong>{" "}
            {estimatedIncome.toLocaleString()} VND/th√°ng
          </p>
          <p>
            üßæ <strong>Ph√≠ t·∫°o l·ªõp:</strong> {classFee.toLocaleString()} VND
          </p>
        </div>
        <p style={{ fontSize: "15px", color: "#7f8c8d" }}>
          B·∫°n c√≥ mu·ªën t·∫°o m√£ QR ƒë·ªÉ thanh to√°n ph√≠ m·ªü l·ªõp kh√¥ng?
        </p>
      </Modal>
      <Modal
        title="üîê Qu√©t m√£ QR ƒë·ªÉ thanh to√°n"
        open={showQR}
        onCancel={() => setShowQR(false)}
        footer={[
          <button
            key="done"
            onClick={() => {
              setShowQR(false);
              onSubmit(form); // G·ª≠i y√™u c·∫ßu sau khi thanh to√°n
            }}
            style={{
              padding: "8px 16px",
              backgroundColor: "#2ecc71",
              border: "none",
              borderRadius: "6px",
              color: "white",
              fontWeight: "bold",
              cursor: "pointer",
            }}
          >
            ‚úÖ T√¥i ƒë√£ thanh to√°n
          </button>,
        ]}
      >
        <div style={{ textAlign: "center" }}>
          <p style={{ fontSize: "16px", marginBottom: "1rem" }}>
            S·ªë ti·ªÅn c·∫ßn thanh to√°n:{" "}
            <strong>{classFee.toLocaleString()} VND</strong>
          </p>
          {qrUrl ? (
            <img src={qrUrl} alt="QR thanh to√°n" style={{ width: 250 }} />
          ) : (
            <p>ƒêang t·∫£i m√£ QR...</p>
          )}
          <p style={{ fontSize: "14px", color: "#7f8c8d", marginTop: "1rem" }}>
            Qu√©t m√£ b·∫±ng ·ª©ng d·ª•ng ng√¢n h√†ng ƒë·ªÉ thanh to√°n ph√≠ m·ªü l·ªõp.
          </p>
        </div>
      </Modal>

      <button
        className="submit-button"
        type="button"
        onClick={() => setShowConfirm(true)}
      >
        G·ª≠i y√™u c·∫ßu
      </button>
    </form>
  );
}
